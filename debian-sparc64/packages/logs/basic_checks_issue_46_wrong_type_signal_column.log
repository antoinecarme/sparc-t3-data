INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal'}))
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', '_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', '_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', '_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['Diff_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', 'Diff_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', 'Diff_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', 'Diff_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['CumSum_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', 'CumSum_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', 'CumSum_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', 'CumSum_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['RelDiff_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', 'RelDiff_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', 'RelDiff_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', 'RelDiff_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 13.603, ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 15.579, ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 15.669, ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 16.017, ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 50.928, ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.057, ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.227, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.252, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.539, ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal'}))
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', '_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', '_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', '_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['Diff_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', 'Diff_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', 'Diff_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', 'Diff_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['CumSum_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', 'CumSum_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', 'CumSum_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', 'CumSum_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['RelDiff_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', 'RelDiff_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', 'RelDiff_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', 'RelDiff_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.789, ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.862, ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.922, ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.178, ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.71, ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.084, ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.311, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.247, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.648, ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal'}))
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', '_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', '_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', '_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['CumSum_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', 'CumSum_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', 'CumSum_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', 'CumSum_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['Diff_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', 'Diff_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', 'Diff_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', 'Diff_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['RelDiff_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', 'RelDiff_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', 'RelDiff_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', 'RelDiff_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.367, ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.988, ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.017, ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.386, ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.315, ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.082, ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.301, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.252, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.641, ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal'}))
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', '_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', '_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', '_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['CumSum_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', 'CumSum_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', 'CumSum_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', 'CumSum_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['Diff_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', 'Diff_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', 'Diff_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', 'Diff_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.std:SKIPPING_AR_MODELS_WITH_LOW_VARIANCE_FOR_CYCLE_RESIDUES ('T+S+R', 4, 10, ['RelDiff_signal_ConstantTrend_residue_bestCycle_byMAPE_residue', 'RelDiff_signal_ConstantTrend_residue_zeroCycle[0.0]_residue', 'RelDiff_signal_Lag1Trend_residue_bestCycle_byMAPE_residue', 'RelDiff_signal_Lag1Trend_residue_zeroCycle[0.0]_residue'])
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.211, ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.24, ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.538, ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.06, ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.508, ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.057, ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.204, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.206, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.471, ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
/home/antoine/dev/python/packages/timeseries/pyaf/tests/basic_checks/issue_46_wrong_type_signal_column.py:13: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  for ty in [np.object , np.bool]:
/home/antoine/dev/python/packages/timeseries/pyaf/tests/basic_checks/issue_46_wrong_type_signal_column.py:13: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  for ty in [np.object , np.bool]:
PYAF_ERROR_SIGNAL_COLUMN_TYPE_NOT_ALLOWED 'signal' 'object'
PYAF_ERROR_SIGNAL_COLUMN_TYPE_NOT_ALLOWED 'signal' 'bool'
PYAF_ERROR_SIGNAL_COLUMN_TYPE_NOT_ALLOWED 'signal' 'datetime64[ns]'
